-------------------------------------------------------------------------
Basics
-------------------------------------------------------------------------
[ 		always returns and object of the same class
[[ 		is used to extract elements of a list or dataframe, it can only be used to extract a single element
$ 		is used to extract elements of a list or data frame by name

x <- c('a','b','c','d')
> x[1]
[1] "a"
> x[2]
[1] "b"
> x[1:4]
[1] "a" "b" "c" "d"
> x[x>'a']
[1] "b" "c" "d"
> u <- x >  'a'
> u
[1] FALSE  TRUE  TRUE  TRUE
> x[u]
[1] "b" "c" "d"

-------------------------------------------------------------------------
Lists
-------------------------------------------------------------------------
 x <- list(foo = 1:4, bar = 0.6) 
> x
$foo
[1] 1 2 3 4

$bar
[1] 0.6

> x[1]
$foo
[1] 1 2 3 4

> x[[1]]
[1] 1 2 3 4

> x$bar
[1] 0.6

> x[["bar"]]
[1] 0.6

> x['bar']
$bar
[1] 0.6

> x <- list(foo = 1:4, bar = 0.6, baz = "hello")
> x[c(1, 3)]
$foo
[1] 1 2 3 4
$baz
[1] "hello"

-------------------------------------------------------------------------
Matrix
-------------------------------------------------------------------------
 x <- matrix(1:6, 2, 3)
> x[1, 2]
[1] 3
> x[2, 1]
[1] 2

> x[1, ]
[1] 1 3 5
> x[, 2]
[1] 3 4

> x <- matrix(1:6, 2, 3)
> x[1, 2]
[1] 3
> x[1, 2, drop = FALSE]
 [,1]
[1,] 3

> x <- matrix(1:6, 2, 3)
> x[1, ]
[1] 1 3 5
> x[1, , drop = FALSE]
 [,1] [,2] [,3]
[1,] 1 3 5


-------------------------------------------------------------------------
Partial Matching
-------------------------------------------------------------------------
 x <- list(aardvark = 1:5)
> x$a
[1] 1 2 3 4 5
> x[["a"]]
NULL
> x[["a", exact = FALSE]]
[1] 1 2 3 4 5


-------------------------------------------------------------------------
Removing missing values
-------------------------------------------------------------------------
 x <- c(1, 2, NA, 4, NA, 5)
> bad <- is.na(x)
> x[!bad]
[1] 1 2 4 5

> x <- c(1, 2, NA, 4, NA, 5)
> y <- c("a", "b", NA, "d", NA, "f")
> good <- complete.cases(x, y)
> good
[1] TRUE TRUE FALSE TRUE FALSE TRUE
> x[good]
[1] 1 2 4 5
> y[good]
[1] "a" "b" "d" "f"

